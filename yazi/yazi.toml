# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/yazi.json"

[manager]
ratio = [1, 4, 3]
sort_by = "modified"
sort_sensitive = false
sort_reverse = true
sort_dir_first = true
linemode = "mtime"
show_hidden = true
show_symlink = true

[preview]
tab_size = 2
max_width = 1960
max_height = 1080
cache_dir = ""
image_filter = "triangle"
image_quality = 75
sixel_fraction = 15
ueberzug_scale = 1
ueberzug_offset = [0, 0, 0, 0]

[input]
# cd
cd_title = "Change directory:"
cd_origin = "top-center"
cd_offset = [0, 2, 50, 3]

# create
create_title = "Create:"
create_origin = "top-center"
create_offset = [0, 2, 50, 3]

# rename
rename_title = "Rename:"
rename_origin = "hovered"
rename_offset = [0, 1, 50, 3]

# trash
trash_title = "Move {n} selected file{s} to trash? (y/N)"
trash_origin = "top-center"
trash_offset = [0, 2, 50, 3]

# delete
delete_title = "Delete {n} selected file{s} permanently? (y/N)"
delete_origin = "top-center"
delete_offset = [0, 2, 50, 3]

# filter
filter_title = "Filter:"
filter_origin = "top-center"
filter_offset = [0, 2, 50, 3]

# find
find_title = ["Find next:", "Find previous:"]
find_origin = "top-center"
find_offset = [0, 2, 50, 3]

# search
search_title = "Search via {n}:"
search_origin = "top-center"
search_offset = [0, 2, 50, 3]

# shell
shell_title = ["Shell:", "Shell (block):"]
shell_origin = "top-center"
shell_offset = [0, 2, 50, 3]

# overwrite
overwrite_title = "Overwrite an existing file? (y/N)"
overwrite_origin = "top-center"
overwrite_offset = [0, 2, 50, 3]

# quit
quit_title = "{n} task{s} running, sure to quit? (y/N)"
quit_origin = "top-center"
quit_offset = [0, 2, 50, 3]

[select]
open_title = "Open with:"
open_origin = "hovered"
open_offset = [0, 1, 50, 7]

[log]
enabled = false



[opener]
edit = [
    { run = 'nvim "$@"', block = true, for = "unix" },
    { run = 'code "%*"', orphan = true, for = "windows" },
]
open = [
    { run = 'xdg-open "$@"', desc = "Open", for = "linux" },
    { run = 'open "$@"', desc = "Open", for = "macos" },
    { run = 'start "" "%1"', orphan = true, desc = "Open", for = "windows" },
]
reveal = [
    { run = 'open -R "$1"', desc = "Reveal", for = "macos" },
    { run = 'explorer /select, "%1"', orphan = true, desc = "Reveal", for = "windows" },
    { run = '''exiftool "$1"; echo "Press enter to exit"; read''', block = true, desc = "Show EXIF", for = "unix" },
]
extract = [
    { run = 'unar "$1"', desc = "Extract here", for = "unix" },
    { run = 'unar "%1"', desc = "Extract here", for = "windows" },
]
play = [
    { run = 'mpv "$@"', orphan = true, for = "unix" },
    { run = 'mpv "%1"', orphan = true, for = "windows" },
    { run = '''mediainfo "$1"; echo "Press enter to exit"; read''', block = true, desc = "Show media info", for = "unix" },
]

[open]
rules = [
    { name = "*/", use = [
        "edit",
        "open",
        "reveal",
    ] },
    { name = "text/*", use = [
        "edit",
        "reveal",
    ] },
    { name = "image/*", use = [
        "open",
        "reveal",
    ] },
    { name = "video/*", use = [
        "play",
        "reveal",
    ] },
    { name = "audio/*", use = [
        "play",
        "reveal",
    ] },
    { name = "inode/x-empty", use = [
        "edit",
        "reveal",
    ] },
    { name = "application/json", use = [
        "edit",
        "reveal",
    ] },
    { name = "*/javascript", use = [
        "edit",
        "reveal",
    ] },
    { name = "application/zip", use = [
        "extract",
        "reveal",
    ] },
    { name = "application/gzip", use = [
        "extract",
        "reveal",
    ] },
    { name = "application/x-tar", use = [
        "extract",
        "reveal",
    ] },
    { name = "application/x-bzip", use = [
        "extract",
        "reveal",
    ] },
    { name = "application/x-bzip2", use = [
        "extract",
        "reveal",
    ] },
    { name = "application/x-7z-compressed", use = [
        "extract",
        "reveal",
    ] },
    { name = "application/x-rar", use = [
        "extract",
        "reveal",
    ] },
    { name = "application/xz", use = [
        "extract",
        "reveal",
    ] },
    { name = "*", use = [
        "open",
        "reveal",
    ] },
]

[tasks]
micro_workers = 10
macro_workers = 25
bizarre_retry = 5
image_alloc = 536870912  # 512MB
image_bound = [0, 0]
suppress_preload = false

[plugin]
prepend_previewers = [
    # GLOW
    { name = "*.md", run = "glow" },
    # EXIFAUDIO
    { name = "audio/*", run = "exifaudio" },
    # OUCH
    { name = "application/zip", run = "ouch" },
    { name = "application/gzip", run = "ouch" },
    { name = "application/x-tar", run = "ouch" },
    { name = "application/x-bzip", run = "ouch" },
    { name = "application/x-bzip2", run = "ouch" },
    { name = "application/x-7z-compressed", run = "ouch" },
    { name = "application/x-rar", run = "ouch" },
    { name = "application/x-xz", run = "ouch" },
]


preloaders = [
    # Image
    { name = "image/vnd.djvu", run = "noop" },
    { name = "image/*", run = "image" },
    # Video
    { name = "video/*", run = "video" },
    # PDF
    { name = "application/pdf", run = "pdf" },
]

previewers = [
    { name = "*/", run = "folder", sync = true },
    { name = "*.md", run = "glow" },
    { mime = "image/*", run = "image" },
    { name = "text/*", run = "code" },
    { name = "*/xml", run = "code" },
    { name = "*/javascript", run = "code" },
    { name = "*/x-wine-extension-ini", run = "code" },
]
